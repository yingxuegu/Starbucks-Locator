<html>
<head>
  <title>Starbucks Loator</title>
  <!-- Latest compiled and minified CSS -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">

  <!-- Optional theme -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap-theme.min.css" integrity="sha384-fLW2N01lMqjakBkx3l/M9EahuwpSfeNvV63J5ezn3uZzapT0u7EYsXMjQV+0En5r" crossorigin="anonymous">

  <!-- Latest compiled and minified JavaScript -->
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>

  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.5/leaflet.css" />
	<script src="http://cdn.leafletjs.com/leaflet-0.7.5/leaflet.js"></script>
	<script src='https://api.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v0.4.0/leaflet.markercluster.js'></script>
 	<link href='https://api.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v0.4.0/MarkerCluster.css' rel='stylesheet' />
 	<link href='https://api.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v0.4.0/MarkerCluster.Default.css' rel='stylesheet' />
  <script src="http://code.jquery.com/jquery-1.10.2.js"></script>
  <script src="http:////code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
  <style>
    div#container{}
    div#header {background-color:#99bbbb;}
    div#menu {background-color:#ffff99;}
    div#map {height:85%;width:85%;float:right;}
    div#content {float:left;}
    div#footer {background-color:#99bbbb;clear:both;text-align:center;}
      IMG.displayed {
      display: block;
      margin-left: auto;
      margin-right: auto }
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      #map {
        height: 100%;
      }
  </style>
</head>
<body>
  <div id="container">
  	<div id="header"><h1>Starbucks Loator</h1></div>
   <nav>
      <div id="menu">
        <ul class="nav nav-tabs" role="tablist">
          <li role="presentation"><a href="WFS_clustermap.htm" aria-controls="Cluster Map" role="tab" data-toggle="tab">Overview</a></li>
          <li role="presentation" class="active"><a href="search_popup_cluster.htm" aria-controls="Cluster Map" role="tab" data-toggle="tab">Search</a></li>
          <li role="presentation"><a href="googlemaps.htm" aria-controls="Google Map" role="tab" data-toggle="tab">Google Map</a></li>
          <li role="presentation"><a href="choropleth-popdensity.htm" aria-controls="Google Map" role="tab" data-toggle="tab">Choropleth Map</a></li>
          <li role="presentation"><a href="statistic1.htm" aria-controls="Google Map" role="tab" data-toggle="tab">Ownership Type</a></li>
            <li role="presentation" ><a href="statistic2.htm" aria-controls="Google Map" role="tab" data-toggle="tab">Latitude Histogram</a></li>
        </ul>
      </div>
    </nav>


    <div id="map">
	<script>
		//---SCOPE---
		//cluster marker
		//messages (debug) using console.log
		//query window
		//ajax query wrapped in a function

        var Thunderforest_Landscape = L.tileLayer('http://{s}.tile.thunderforest.com/landscape/{z}/{x}/{y}.png', {
        	attribution: '&copy; <a href="http://www.opencyclemap.org">OpenCycleMap</a>, &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
        });

        var OpenStreetMap_BlackAndWhite = L.tileLayer('http://{s}.tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png', {
    			maxZoom: 18,
    			attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
    		});

    		var map = L.map('map', {
    		    center: new L.LatLng(37.7512, -79),
    		    zoom: 7,
    		    layers: [Thunderforest_Landscape]
    		});

		var owsrootUrl = 'http://localhost:8080/geoserver/test/ows';

		var defaultParameters = {
			service: 'WFS',
			version: '1.0.0',
			request: 'GetFeature',
			typeName: 'test:starbucks3',
			outputFormat: 'text/javascript',
			format_options: 'callback:loadGeoJson',
			srsName: 'EPSG:4326'
		};

		//setting the default word parameter for Geoserver SQL query
		var query = "va";
		viewparam = {
			viewparams: "word:" + query
		};

		var parameters = L.Util.extend(defaultParameters, viewparam);
		var URL = owsrootUrl + L.Util.getParamString(parameters);

		console.log("Geoserver URL: " + URL);

		//MarkerClusterGroup that collects all GeoJSON objects
		var group = new L.markerClusterGroup().addTo(map);
		var geojsonlayer;

		queryWFS(URL);

		function queryWFS(URL) {
			$.ajax({
				url: URL,
				dataType: 'jsonp',
				jsonpCallback: 'loadGeoJson',
				success: handleJson
			});
		}

    		var baseMaps = {
    			"Thunderforest_Landscape" : Thunderforest_Landscape,
          		"OSM B&W" : OpenStreetMap_BlackAndWhite,
    		};

    		var overlayMaps = {
    			"starbucks": group
    		};

    		L.control.layers(baseMaps, overlayMaps).addTo(map);

		function handleJson(data) {
			//    console.log(data);
			geojsonlayer = L.geoJson(data, {
				onEachFeature: function(feature, my_Layer) {
					my_Layer.bindPopup("location: " + feature.properties.location + "<br \>" + "service: " + feature.properties.service + "<br \>" + "products: " + feature.properties.products + "<br \>" + "phone_number: " + feature.properties.phone_number);
				},
				pointToLayer: function(feature, latlng) {
					var smallIcon = L.icon({
						iconSize:     [32, 32],
						shadowSize:   [51, 37],
						iconAnchor:   [16, 37],
						shadowAnchor: [17, 37],
						popupAnchor:  [-3, -76],
			      iconUrl: 'images/starbucks_cut.jpg'
			    });
			    return L.marker(latlng, {icon: smallIcon});
				}
			}).addTo(group);
			map.fitBounds(group.getBounds()); // zooms to fit data
		}

		// adding the search window in the bottomleft corner
		myControl = L.control({
			position: 'topleft'
		});

		myControl.onAdd = function(map) {
			this._div = L.DomUtil.create('div', 'myControl');
			this._div.innerHTML = '<h1 id="title">Starbucks Locator</h1>' +
				'<input type="text" id="myTextField" value="search..." />' +
				'<input type="submit" id="searchBtn" value="Search" onclick="change()"/>'
			L.DomEvent.disableClickPropagation(this._div);
			return this._div;
		}
		myControl.addTo(map);

		//Functions to either disable (onmouseover) or enable (onmouseout) the map's dragging
		function controlEnter(e) {
			map.dragging.disable();
		}

		function controlLeave() {
			map.dragging.enable();
		}

		//Quick application to all input tags
		var inputTags = document.getElementsByTagName("input")
		for (var i = 0; i < inputTags.length; i++) {
			inputTags[i].onmouseover = controlEnter;
			inputTags[i].onmouseout = controlLeave;
		}

		function change() {
			var query = document.getElementById('myTextField').value;
			if (query.length == 0) {
				alert('Nothing to search for...');
				return;
			}
			// updating the layer means deleting the old one and
			// adding a new one
			group.removeLayer(geojsonlayer);
			//		   hom.setParams({viewparams: "word:" + query});
			viewparam = {
				viewparams: "word:" + query
			};
			parameters = L.Util.extend(defaultParameters, viewparam);
			URL = owsrootUrl + L.Util.getParamString(parameters);
			//		var URL = geoJsonUrl;
			console.log("Geoserver URL: " + URL);

			queryWFS(URL);

			var title = document.getElementById('title');
			title.innerHTML = query;
		}

		function loadGeoJson(data) {
			console.log("callback function fired");
		}
	</script>

    </div>
    <div id="content", center>
	<P></P>
	<IMG src="images/starbucks-coffee.jpg" alt="starbucks" style="width:200px;height:200px;">
	<P>___________________________</P>
	<P></P>
	<IMG src="images/image.png" alt="image" style="width:180px;height:180px;">
	<P></P>
    </div>
    <div id="footer"><h3><small>@Jiao Ma &nbsp &nbsp GGS 692 Project</h3></small></div>
  </div>
</body>
